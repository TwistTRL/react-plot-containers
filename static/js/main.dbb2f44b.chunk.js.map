{"version":3,"sources":["lib/PlotContainers.js","index.js"],"names":["PlotContainer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","generateGridLayoutStyle","memoize_one","width","height","leftWidth","plotWidth","rightWidth","topHeight","plotHeight","bottomHeight","display","gridGap","gridTemplateColumns","gridTemplateRows","inherits","createClass","key","value","_this$props","props","children","style","react_default","a","createElement","className","Component","PlotSubContainer","React","Children","map","child","Left","backgroundImage","opacity","Right","Top","Bottom","App","state","_this2","_this$state","react","type","min","max","onChange","x","setState","Number","parseFloat","target","PlotContainers_PlotContainer","PlotContainers_PlotSubContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dbb2f44b.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {memoize_one} from \"memoize\";\nimport \"./PlotContainers.css\";\n\nexport class PlotContainer extends Component{\n  render(){\n    let { children,\n          leftWidth,plotWidth,rightWidth,\n          topHeight,plotHeight,bottomHeight} = this.props;\n    let width = leftWidth + plotWidth + rightWidth;\n    let height = topHeight + plotHeight + bottomHeight;\n    let style = this.generateGridLayoutStyle( width,height,\n                                              leftWidth,plotWidth,rightWidth,\n                                              topHeight,plotHeight,bottomHeight);\n    return (\n      <div style={style} className=\"PlotContainers-positionRelative\">\n        {children}\n      </div>\n    )\n  }\n  \n  generateGridLayoutStyle = memoize_one((width,height,\n                          leftWidth,plotWidth,rightWidth,\n                          topHeight,plotHeight,bottomHeight)=>{\n    let style = { display:\"grid\",\n                  height:height,\n                  width:width,\n                  gridGap:0,\n                  gridTemplateColumns:`${leftWidth}px ${plotWidth}px ${rightWidth}px`,\n                  gridTemplateRows:`${topHeight}px ${plotHeight}px ${bottomHeight}px`\n                  };\n    return style;\n  })\n}\n\nexport const PlotSubContainer = (props)=>{\n  return (\n    <div className=\"PlotContainers-positionRelative\">\n      { props.children ? \n        React.Children.map(props.children,(child)=>\n          <div className=\"PlotContainers-positionAbsolute\">\n            {child}\n          </div>) :\n        null\n        }\n    </div>\n  );\n}\n","import React, {Component, Fragment}from 'react';\nimport ReactDOM from 'react-dom';\nimport {PlotContainer,PlotSubContainer} from \"./lib\";\n\nfunction Left(props) {\n  let {height,width} = props;\n  return (\n    <div style={{width,height,backgroundImage:\"linear-gradient(to right,red,white,white)\",opacity:0.3}}>\n    </div>\n  );\n}\n\nfunction Right(props) {\n  let {height,width} = props;\n  return (\n    <div style={{width,height,backgroundImage:\"linear-gradient(to right,white,white,green)\",opacity:0.3}}>\n    </div>\n  );\n}\n\nfunction Top(props) {\n  let {height,width} = props;\n  return (\n    <div style={{width,height,backgroundImage:\"linear-gradient(blue,white,white)\",opacity:0.3}}>\n    </div>\n  );\n}\n\nfunction Bottom(props) {\n  let {height,width} = props;\n  return (\n    <div style={{width,height,backgroundImage:\"linear-gradient(white,white,yellow)\",opacity:0.3}}>\n    </div>\n  );\n}\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {leftWidth: 100,\n                  plotWidth: 1000,\n                  rightWidth: 100,\n                  topHeight: 50,\n                  plotHeight: 400,\n                  bottomHeight: 50,\n                  };\n  }\n\n  render(){\n    let { leftWidth, plotWidth, rightWidth,\n          topHeight, plotHeight, bottomHeight} = this.state;\n    return (\n      <Fragment>\n        <div>\n          leftWidth:\n          <input  type=\"range\" min={0} max={200} value={leftWidth}\n                  onChange={(x)=>this.setState({leftWidth:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        <div>\n          plotWidth:\n          <input  type=\"range\" min={500} max={1400} value={plotWidth}\n                  onChange={(x)=>this.setState({plotWidth:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        <div>\n          rightWidth:\n          <input  type=\"range\" min={0} max={200} value={rightWidth}\n                  onChange={(x)=>this.setState({rightWidth:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        <div>\n          topHeight:\n          <input  type=\"range\" min={0} max={200} value={topHeight}\n                  onChange={(x)=>this.setState({topHeight:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        <div>\n          plotHeight:\n          <input  type=\"range\" min={100} max={500} value={plotHeight}\n                  onChange={(x)=>this.setState({plotHeight:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        <div>\n          bottomHeight:\n          <input  type=\"range\" min={0} max={200} value={bottomHeight}\n                  onChange={(x)=>this.setState({bottomHeight:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        {/*===========================*/}\n        <PlotContainer  leftWidth={leftWidth}\n                        plotWidth={plotWidth}\n                        rightWidth={rightWidth}\n                        topHeight={topHeight}\n                        plotHeight={plotHeight}\n                        bottomHeight={bottomHeight}\n                        >\n          <PlotSubContainer>\n            <Left width={leftWidth} height={topHeight}/>\n            <Right width={leftWidth} height={topHeight}/>\n            <Top width={leftWidth} height={topHeight}/>\n            <Bottom width={leftWidth} height={topHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={plotWidth} height={topHeight}/>\n            <Right width={plotWidth} height={topHeight}/>\n            <Top width={plotWidth} height={topHeight}/>\n            <Bottom width={plotWidth} height={topHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={rightWidth} height={topHeight}/>\n            <Right width={rightWidth} height={topHeight}/>\n            <Top width={rightWidth} height={topHeight}/>\n            <Bottom width={rightWidth} height={topHeight}/>\n          </PlotSubContainer>\n          {/*===========================*/}\n          <PlotSubContainer>\n            <Left width={leftWidth} height={plotHeight}/>\n            <Right width={leftWidth} height={plotHeight}/>\n            <Top width={leftWidth} height={plotHeight}/>\n            <Bottom width={leftWidth} height={plotHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={plotWidth} height={plotHeight}/>\n            <Right width={plotWidth} height={plotHeight}/>\n            <Top width={plotWidth} height={plotHeight}/>\n            <Bottom width={plotWidth} height={plotHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={rightWidth} height={plotHeight}/>\n            <Right width={rightWidth} height={plotHeight}/>\n            <Top width={rightWidth} height={plotHeight}/>\n            <Bottom width={rightWidth} height={plotHeight}/>\n          </PlotSubContainer>\n          {/*===========================*/}\n          <PlotSubContainer>\n            <Left width={leftWidth} height={bottomHeight}/>\n            <Right width={leftWidth} height={bottomHeight}/>\n            <Top width={leftWidth} height={bottomHeight}/>\n            <Bottom width={leftWidth} height={bottomHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={plotWidth} height={bottomHeight}/>\n            <Right width={plotWidth} height={bottomHeight}/>\n            <Top width={plotWidth} height={bottomHeight}/>\n            <Bottom width={plotWidth} height={bottomHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={rightWidth} height={bottomHeight}/>\n            <Right width={rightWidth} height={bottomHeight}/>\n            <Top width={rightWidth} height={bottomHeight}/>\n            <Bottom width={rightWidth} height={bottomHeight}/>\n          </PlotSubContainer>\n        </PlotContainer>\n      </Fragment>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}