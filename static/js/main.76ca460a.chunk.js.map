{"version":3,"sources":["lib/PlotContainers.js","index.js"],"names":["PlotContainer","generateGridLayoutStyle","memoize_one","width","height","leftWidth","plotWidth","rightWidth","topHeight","plotHeight","bottomHeight","display","gridGap","gridTemplateColumns","concat","gridTemplateRows","_this$props","this","props","children","style","react_default","a","createElement","className","Component","PlotSubContainer","React","Children","map","child","Left","backgroundImage","opacity","Right","Top","Bottom","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","_this$state","react","type","min","max","value","onChange","x","setState","Number","parseFloat","target","PlotContainers_PlotContainer","PlotContainers_PlotSubContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.76ca460a.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {memoize_one} from \"memoize\";\nimport PropTypes from \"prop-types\";\nimport \"./PlotContainers.css\";\n\nclass PlotContainer extends Component{\n  render(){\n    let { children,\n          leftWidth,plotWidth,rightWidth,\n          topHeight,plotHeight,bottomHeight} = this.props;\n    let width = leftWidth + plotWidth + rightWidth;\n    let height = topHeight + plotHeight + bottomHeight;\n    let style = this.generateGridLayoutStyle( width,height,\n                                              leftWidth,plotWidth,rightWidth,\n                                              topHeight,plotHeight,bottomHeight);\n    return (\n      <div style={style} className=\"PlotContainers-positionRelative\">\n        {children}\n      </div>\n    )\n  }\n  \n  generateGridLayoutStyle = memoize_one((width,height,\n                          leftWidth,plotWidth,rightWidth,\n                          topHeight,plotHeight,bottomHeight)=>{\n    let style = { display:\"grid\",\n                  height:height,\n                  width:width,\n                  gridGap:0,\n                  gridTemplateColumns:`${leftWidth}px ${plotWidth}px ${rightWidth}px`,\n                  gridTemplateRows:`${topHeight}px ${plotHeight}px ${bottomHeight}px`\n                  };\n    return style;\n  })\n}\n\nPlotContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  leftWidth: PropTypes.number.isRequired,\n  plotWidth: PropTypes.number.isRequired,\n  rightWidth: PropTypes.number.isRequired,\n  topHeight: PropTypes.number.isRequired,\n  plotHeight: PropTypes.number.isRequired,\n  bottomHeight: PropTypes.number.isRequired,\n}\n\nconst PlotSubContainer = (props)=>{\n  return (\n    <div className=\"PlotContainers-positionRelative\">\n      { props.children ? \n        React.Children.map(props.children,(child)=>\n          <div className=\"PlotContainers-positionAbsolute\">\n            {child}\n          </div>) :\n        null\n        }\n    </div>\n  );\n}\n\nPlotSubContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport {PlotContainer,PlotSubContainer};","import React, {Component, Fragment}from 'react';\nimport ReactDOM from 'react-dom';\nimport {PlotContainer,PlotSubContainer} from \"./lib\";\n\nfunction Left(props) {\n  let {height,width} = props;\n  return (\n    <div style={{width,height,backgroundImage:\"linear-gradient(to right,red,white,white)\",opacity:0.3}}>\n    </div>\n  );\n}\n\nfunction Right(props) {\n  let {height,width} = props;\n  return (\n    <div style={{width,height,backgroundImage:\"linear-gradient(to right,white,white,green)\",opacity:0.3}}>\n    </div>\n  );\n}\n\nfunction Top(props) {\n  let {height,width} = props;\n  return (\n    <div style={{width,height,backgroundImage:\"linear-gradient(blue,white,white)\",opacity:0.3}}>\n    </div>\n  );\n}\n\nfunction Bottom(props) {\n  let {height,width} = props;\n  return (\n    <div style={{width,height,backgroundImage:\"linear-gradient(white,white,yellow)\",opacity:0.3}}>\n    </div>\n  );\n}\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {leftWidth: 100,\n                  plotWidth: 1000,\n                  rightWidth: 100,\n                  topHeight: 50,\n                  plotHeight: 400,\n                  bottomHeight: 50,\n                  };\n  }\n\n  render(){\n    let { leftWidth, plotWidth, rightWidth,\n          topHeight, plotHeight, bottomHeight} = this.state;\n    return (\n      <Fragment>\n        <div>\n          leftWidth:\n          <input  type=\"range\" min={0} max={200} value={leftWidth}\n                  onChange={(x)=>this.setState({leftWidth:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        <div>\n          plotWidth:\n          <input  type=\"range\" min={500} max={1400} value={plotWidth}\n                  onChange={(x)=>this.setState({plotWidth:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        <div>\n          rightWidth:\n          <input  type=\"range\" min={0} max={200} value={rightWidth}\n                  onChange={(x)=>this.setState({rightWidth:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        <div>\n          topHeight:\n          <input  type=\"range\" min={0} max={200} value={topHeight}\n                  onChange={(x)=>this.setState({topHeight:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        <div>\n          plotHeight:\n          <input  type=\"range\" min={100} max={500} value={plotHeight}\n                  onChange={(x)=>this.setState({plotHeight:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        <div>\n          bottomHeight:\n          <input  type=\"range\" min={0} max={200} value={bottomHeight}\n                  onChange={(x)=>this.setState({bottomHeight:Number.parseFloat(x.target.value)})}\n                  />\n        </div>\n        {/*===========================*/}\n        <PlotContainer  leftWidth={leftWidth}\n                        plotWidth={plotWidth}\n                        rightWidth={rightWidth}\n                        topHeight={topHeight}\n                        plotHeight={plotHeight}\n                        bottomHeight={bottomHeight}\n                        >\n          <PlotSubContainer>\n            <Left width={leftWidth} height={topHeight}/>\n            <Right width={leftWidth} height={topHeight}/>\n            <Top width={leftWidth} height={topHeight}/>\n            <Bottom width={leftWidth} height={topHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={plotWidth} height={topHeight}/>\n            <Right width={plotWidth} height={topHeight}/>\n            <Top width={plotWidth} height={topHeight}/>\n            <Bottom width={plotWidth} height={topHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={rightWidth} height={topHeight}/>\n            <Right width={rightWidth} height={topHeight}/>\n            <Top width={rightWidth} height={topHeight}/>\n            <Bottom width={rightWidth} height={topHeight}/>\n          </PlotSubContainer>\n          {/*===========================*/}\n          <PlotSubContainer>\n            <Left width={leftWidth} height={plotHeight}/>\n            <Right width={leftWidth} height={plotHeight}/>\n            <Top width={leftWidth} height={plotHeight}/>\n            <Bottom width={leftWidth} height={plotHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={plotWidth} height={plotHeight}/>\n            <Right width={plotWidth} height={plotHeight}/>\n            <Top width={plotWidth} height={plotHeight}/>\n            <Bottom width={plotWidth} height={plotHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={rightWidth} height={plotHeight}/>\n            <Right width={rightWidth} height={plotHeight}/>\n            <Top width={rightWidth} height={plotHeight}/>\n            <Bottom width={rightWidth} height={plotHeight}/>\n          </PlotSubContainer>\n          {/*===========================*/}\n          <PlotSubContainer>\n            <Left width={leftWidth} height={bottomHeight}/>\n            <Right width={leftWidth} height={bottomHeight}/>\n            <Top width={leftWidth} height={bottomHeight}/>\n            <Bottom width={leftWidth} height={bottomHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={plotWidth} height={bottomHeight}/>\n            <Right width={plotWidth} height={bottomHeight}/>\n            <Top width={plotWidth} height={bottomHeight}/>\n            <Bottom width={plotWidth} height={bottomHeight}/>\n          </PlotSubContainer>\n          <PlotSubContainer>\n            <Left width={rightWidth} height={bottomHeight}/>\n            <Right width={rightWidth} height={bottomHeight}/>\n            <Top width={rightWidth} height={bottomHeight}/>\n            <Bottom width={rightWidth} height={bottomHeight}/>\n          </PlotSubContainer>\n        </PlotContainer>\n      </Fragment>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}